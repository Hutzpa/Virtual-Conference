@model Event_

@inject WirtConfer.Data.ApplicationDbContext _dbContext
@inject Microsoft.AspNetCore.Identity.UserManager<User> _userManager
@using Microsoft.EntityFrameworkCore;


@{
    bool IsModer = false;
    void CurUserIsModerator()
    {
        try
        {
            var userInEvent = _dbContext.UserInEvents.Include(o => o.User).Include(o => o.Event).FirstOrDefault(o => o.Event.Id == Model.Id && o.User.Id == _userManager.GetUserId(User));
            if (userInEvent != null)
                IsModer = userInEvent.Role == WirtConfer.Models.States.Roles.moderator;
        }
        catch { }
    }
    CurUserIsModerator();
}


<div class="container">
    <div class="row">

        <h2 class="display-2 mb-3 col-4">
            @Model.Name
        </h2>

        <div class="col-8">

            @if (!String.IsNullOrEmpty(Model.Image))
            {
                var imgPath = $"/Image/{Model.Image}";
                <img src="@imgPath" class="rounded float-right" height="330" width="650" />

            }
        </div>

    </div>

</div>


@if (Model.OwnerId == _userManager.GetUserId(User))
{
<a class="btn btn-info" asp-controller="Room" asp-action="CreateRoom" id="Create" asp-route-idEv="@Model.Id">@Localizer["CreateRoom"]</a>
}




<h5 class="lead">@Localizer["RoomHere"]</h5>

<table class="table table-striped ">
    <thead class="thead-light">
        <tr>
            <th class="lead pl-5">
                @Localizer["RoomName"]
            </th>
            <th>

            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var room in _dbContext.Rooms.Where(o => o.EventId == Model.Id))
        {
            <tr>
                <td>
                    <a class="lead" asp-controller="Room" asp-action="Room" asp-route-idRoom="@room.Id"> @room.Name </a>
                </td>
                <td>
                    @if (Model.OwnerId == _userManager.GetUserId(User))
                    {
                    <a class="btn btn-danger" asp-controller="Room" asp-action="DeleteRoom" asp-route-id="@room.Id"> @Localizer["DeleteRoom"]</a>
                    }

                </td>
            </tr>
        }
    </tbody>
</table>


@if (Model.OwnerId == _userManager.GetUserId(User))
{
<a class="btn btn-info mr-5 mb-2 mt-5" asp-controller="Invite" asp-action="CreateInvite" asp-route-idEv="@Model.Id" asp-route-invType="0">@Localizer["CreateSingle"] </a>

    <a class="btn btn-info ml-5 mb-2 mt-5" asp-controller="Invite" asp-action="CreateInvite" asp-route-idEv="@Model.Id" asp-route-invType="1">@Localizer["CreateMany"]</a>
    <br />

    <h4 class="lead">@Localizer["ActiveInvites"]</h4>
    <table class="table table-striped">
        <thead class="thead-light">
            <tr>
                <th class="lead">@Localizer["Url"]</th>
                <th class="lead">@Localizer["Type"]</th>
                <th class="lead">@Localizer["Action"]</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var invite in _dbContext.Invites.Where(o => o.EventId == Model.Id))
            {
                <tr>
                    <td class="lead mr-2">
                        <label>@invite.Url</label>
                    </td>
                    <td class="lead ml-2 mr-2">
                        <label>@invite.Type.ToString()</label>
                    </td>

                    <td>
                        @if (invite.Type == WirtConfer.Models.States.InviteType.Single)
                        {
                        <a class="btn btn-secondary ml-2" asp-controller="Invite" asp-action="ChangeInvite" asp-route-idInv="@invite.Id"> @Localizer["ChangeGroup"] </a>
                        }
                        else
                        {
                    <a class="btn btn-secondary ml-2" asp-controller="Invite" asp-action="ChangeInvite" asp-route-idInv="@invite.Id"> @Localizer["ChangeSingle"] </a>
                        }
                    <a class="btn btn-danger ml-2" asp-controller="Invite" asp-action="DeleteInvite" asp-route-idInv="@invite.Id"> @Localizer["DeleteInvite"] </a>
                    </td>
                </tr>
            }

        </tbody>
    </table>
    <br />


}
<h4 class="lead mb-3">
    @Localizer["UserList"]
</h4>


<table class="table table-striped">
    <thead class="thead-light">
        <tr>
            <th class="lead">
                @Localizer["User"]
            </th>

            <th class="lead">
                @Localizer["Action"]
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in _dbContext.UserInEvents.Include(o => o.User).Include(o => o.Event).Where(o => o.Event.Id == Model.Id))
        {
            <tr>
                <td>
                    <label class="lead">
                        @user.User.Email
                    </label>

                </td>
                <td>
                    @if (IsModer && user.Role != WirtConfer.Models.States.Roles.moderator) //Если текущий пользователь модерирует данный ивент
                    {
                        <label>
                            <a class="btn btn-danger" asp-controller="Moder" asp-action="Ban" asp-route-id="@user.User.Id" asp-route-evId="@Model.Id">@Localizer["Ban"]</a>
                        </label>
                    }
                    @if (Model.OwnerId == _userManager.GetUserId(User))
                    {
                        if (user.Role != WirtConfer.Models.States.Roles.moderator)
                        {
                            <label>
                                <a class="btn btn-info" asp-controller="Moder" asp-action="MakeModer" asp-route-id="@user.User.Id" asp-route-evId="@Model.Id">@Localizer["MakeMod"]</a>
                            </label>
                        }
                        else
                        {
                            <label>
                                <a class="btn btn-danger" asp-controller="Moder" asp-action="DeleteModer" asp-route-id="@user.User.Id" asp-route-evId="@Model.Id">@Localizer["UnmakeMod"]</a>
                            </label>
                        }
                    }
                </td>
            </tr>
        }

    </tbody>
</table>


@if (Model.OwnerId == _userManager.GetUserId(User)) //пользователь который забанен в этом ивенте
{

    @if (Enumerable.Count(_dbContext.UserInEvents.Include(o => o.User).Include(o => o.Event).Where(o => o.Event.Id == Model.Id && o.IsBanned).ToList()) > 0)
    {
<h4 class="lead">@Localizer["BanList"]</h4>
        <ul class="list-group">
            @foreach (var user in _dbContext.UserInEvents.Include(o => o.User).Include(o => o.Event).Where(o => o.Event.Id == Model.Id && o.IsBanned))
            {
                <li class="list-group-item lead">
                    @user.User.Name @user.User.Surname  @user.User.UserName
                </li>
            }
        </ul>

    }

}

<a class="btn btn-danger" asp-controller="Moder" asp-action="Leave" asp-route-idEv="@Model.Id">@Localizer["Leave"]</a>
