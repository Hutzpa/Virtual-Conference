@model IEnumerable<UserInEvent>

@*@inject WirtConfer.Data.ApplicationDbContext _dbContext
@inject Microsoft.AspNetCore.Identity.UserManager<User> _userManager
@using Microsoft.EntityFrameworkCore*@



@*@{
    //var eventsOfThisUser = _dbContext.UserInEvents.Include(o=>o.Event).Include(o=>o.User).Where(o => o.Event.OwnerId == _userManager.GetUserId(User) || o.User.Id == _userManager.GetUserId(User));
    var eventsOfThisUser = _dbContext.UserInEvents.Include(o=>o.Event).Where(o => o.Event.OwnerId == _userManager.GetUserId(User));
    int k = 0;
}*@

@if (Enumerable.Count(Model) == 0)
{
    <h3>You don't have any event</h3>
    <a asp-controller="Event" asp-action="CreateEv">Create one</a>
}
else
{
    <table>
        <thead>
            <tr>
                <th>Name</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var e in Model)
            {
                <tr>
                    <td>
                        <a asp-controller="Event" asp-action="Event" asp-route-id="@e.EventId"> @e.Event.Name </a>
                    </td>
                    <td>
                        <a asp-controller="Event" asp-action="DeleteEv" asp-route-id="@e.Id"> Delete </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}